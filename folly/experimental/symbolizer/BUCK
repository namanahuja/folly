load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")

oncall("fbcode_entropy_wardens_folly")

cpp_library(
    # @autodeps-skip
    name = "dwarf",
    srcs = [
        "Dwarf.cpp",
        "DwarfImpl.cpp",
        "DwarfLineNumberVM.cpp",
        "DwarfSection.cpp",
        "DwarfUtil.cpp",
    ],
    headers = [
        "Dwarf.h",
        "DwarfImpl.h",
        "DwarfLineNumberVM.h",
        "DwarfSection.h",
        "DwarfUtil.h",
    ],
    deps = [
        "folly//folly:optional",
        "folly//folly/lang:safe_assert",
        "folly//folly/portability:config",
        "folly//folly/portability:unistd",
    ],
    exported_deps = [
        "fbsource//third-party/libdwarf:dwarf",
        ":elf",
        ":elf_cache",
        ":symbolized_frame",
        "folly//folly:function",
        "folly//folly:range",
    ],
    external_deps = [
        "glog",
    ],
)

cpp_library(
    name = "elf",
    srcs = [
        "Elf.cpp",
    ],
    headers = [
        "Elf.h",
        "Elf-inl.h",
    ],
    deps = [
        "folly//folly:exception",
        "folly//folly:scope_guard",
        "folly//folly/lang:c_string",
        "folly//folly/portability:sys_mman",
    ],
    exported_deps = [
        "folly//folly:conv",
        "folly//folly:likely",
        "folly//folly:range",
        "folly//folly/lang:safe_assert",
        "folly//folly/portability:config",
    ],
    external_deps = [
        "glog",
    ],
)

cpp_library(
    name = "symbolized_frame",
    srcs = ["SymbolizedFrame.cpp"],
    headers = ["SymbolizedFrame.h"],
    exported_deps = [
        "folly//folly:range",
    ],
)

cpp_library(
    name = "line_reader",
    srcs = ["LineReader.cpp"],
    headers = ["LineReader.h"],
    deps = [
        "folly//folly:file_util",
    ],
    exported_deps = [
        "folly//folly:range",
    ],
)

cpp_library(
    name = "stack_trace",
    srcs = ["StackTrace.cpp"],
    headers = ["StackTrace.h"],
    deps = [
        "folly//folly:cpp_attributes",
        "folly//folly:portability",
        "folly//folly/portability:config",
        "folly//folly/portability:libunwind",
        "folly//folly/tracing:async_stack",
    ],
    exported_deps = [
        "folly//folly/portability:sys_types",
    ],
)

cpp_library(
    name = "elf_cache",
    srcs = [
        "ElfCache.cpp",
    ],
    headers = [
        "ElfCache.h",
    ],
    deps = [
        "folly//folly:scope_guard",
        "folly//folly/portability:sys_mman",
    ],
    exported_deps = [
        ":elf",
        "folly//folly:optional",
        "folly//folly:range",
        "folly//folly/hash:hash",
        "folly//folly/memory:reentrant_allocator",
        "folly//folly/portability:config",
    ],
    exported_external_deps = [
        "boost",
    ],
)

cpp_library(
    name = "symbolize_printer",
    srcs = [
        "SymbolizePrinter.cpp",
    ],
    headers = [
        "SymbolizePrinter.h",
    ],
    deps = [
        "folly//folly:demangle",
        "folly//folly:file_util",
        "folly//folly:scope_guard",
        "folly//folly/io:iobuf",
        "folly//folly/lang:to_ascii",
    ],
    exported_deps = [
        ":symbolized_frame",
        "folly//folly:fbstring",
        "folly//folly:range",
    ],
)

cpp_library(
    name = "symbolizer",
    srcs = [
        "Symbolizer.cpp",
    ],
    headers = [
        "Symbolizer.h",
    ],
    deps = [
        ":elf",
        ":line_reader",
        "folly//folly:file_util",
        "folly//folly:memory",
        "folly//folly:scope_guard",
        "folly//folly:synchronized",
        "folly//folly/container:evicting_cache_map",
        "folly//folly/experimental/symbolizer/detail:debug",
        "folly//folly/lang:safe_assert",
        "folly//folly/lang:to_ascii",
        "folly//folly/memory:sanitize_address",
        "folly//folly/portability:sys_mman",
        "folly//folly/tracing:async_stack",
    ],
    exported_deps = [
        ":dwarf",
        ":elf_cache",
        ":stack_trace",
        ":symbolize_printer",
        ":symbolized_frame",
        "folly//folly:fbstring",
        "folly//folly:optional",
        "folly//folly:range",
        "folly//folly:string",
        "folly//folly/io:iobuf",
        "folly//folly/portability:config",
        "folly//folly/portability:unistd",
    ],
)

cpp_library(
    name = "signal_handler",
    srcs = [
        "SignalHandler.cpp",
    ],
    headers = [
        "SignalHandler.h",
    ],
    deps = [
        ":symbolizer",
        "folly//folly:scope_guard",
        "folly//folly/lang:to_ascii",
        "folly//folly/portability:sys_syscall",
        "folly//folly/portability:unistd",
    ],
    external_deps = [
        "glog",
    ],
)
