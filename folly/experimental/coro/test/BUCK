load("@fbcode_macros//build_defs:cpp_benchmark.bzl", "cpp_benchmark")
load("@fbcode_macros//build_defs:cpp_unittest.bzl", "cpp_unittest")

oncall("fbcode_entropy_wardens_folly")

cpp_unittest(
    name = "async_stack_test",
    srcs = [
        "AsyncStackTest.cpp",
    ],
    deps = [
        "folly//folly:portability",
        "folly//folly/experimental/coro:async_stack",
        "folly//folly/experimental/coro:baton",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:collect",
        "folly//folly/experimental/coro:mutex",
        "folly//folly/experimental/coro:task",
        "folly//folly/portability:gtest",
        "folly//folly/tracing:async_stack",
    ],
)

cpp_unittest(
    name = "coro_test",
    srcs = [
        "AccumulateTest.cpp",
        "AsyncGeneratorTest.cpp",
        "AsyncPipeTest.cpp",
        "AsyncScopeTest.cpp",
        "BatonTest.cpp",
        "BlockingWaitTest.cpp",
        "BoundedQueueTest.cpp",
        "CollectTest.cpp",
        "ConcatTest.cpp",
        "CoroTest.cpp",
        "CurrentExecutorTest.cpp",
        "ErrorTest.cpp",
        "FilterTest.cpp",
        "FutureUtilTest.cpp",
        "InlineTaskTest.cpp",
        "MergeTest.cpp",
        "MutexTest.cpp",
        "ScopeExitTest.cpp",
        "SharedMutexTest.cpp",
        "SmallUnboundedQueueTest.cpp",
        "TaskTest.cpp",
        "TimeoutTest.cpp",
        "TraitsTest.cpp",
        "TransformTest.cpp",
        "UnboundedQueueTest.cpp",
    ],
    deps = [
        "folly//folly:cancellation_token",
        "folly//folly:chrono",
        "folly//folly:conv",
        "folly//folly:exception_wrapper",
        "folly//folly:optional",
        "folly//folly:portability",
        "folly//folly:scope_guard",
        "folly//folly:traits",
        "folly//folly:utility",
        "folly//folly/executors:cpu_thread_pool_executor",
        "folly//folly/executors:global_executor",
        "folly//folly/executors:inline_executor",
        "folly//folly/executors:manual_executor",
        "folly//folly/experimental/coro:accumulate",
        "folly//folly/experimental/coro:async_generator",
        "folly//folly/experimental/coro:async_pipe",
        "folly//folly/experimental/coro:async_scope",
        "folly//folly/experimental/coro:auto_cleanup",
        "folly//folly/experimental/coro:baton",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:bounded_queue",
        "folly//folly/experimental/coro:collect",
        "folly//folly/experimental/coro:concat",
        "folly//folly/experimental/coro:coroutine",
        "folly//folly/experimental/coro:current_executor",
        "folly//folly/experimental/coro:detach_on_cancel",
        "folly//folly/experimental/coro:filter",
        "folly//folly/experimental/coro:future_util",
        "folly//folly/experimental/coro:generator",
        "folly//folly/experimental/coro:gtest_helpers",
        "folly//folly/experimental/coro:inline_task",
        "folly//folly/experimental/coro:invoke",
        "folly//folly/experimental/coro:merge",
        "folly//folly/experimental/coro:mutex",
        "folly//folly/experimental/coro:result",
        "folly//folly/experimental/coro:shared_mutex",
        "folly//folly/experimental/coro:sleep",
        "folly//folly/experimental/coro:small_unbounded_queue",
        "folly//folly/experimental/coro:task",
        "folly//folly/experimental/coro:timed_wait",
        "folly//folly/experimental/coro:timeout",
        "folly//folly/experimental/coro:traits",
        "folly//folly/experimental/coro:transform",
        "folly//folly/experimental/coro:unbounded_queue",
        "folly//folly/experimental/coro:with_cancellation",
        "folly//folly/fibers:core_manager",
        "folly//folly/fibers:fiber_manager_map",
        "folly//folly/fibers:semaphore",
        "folly//folly/futures:core",
        "folly//folly/io/async:request_context",
        "folly//folly/io/async:scoped_event_base_thread",
        "folly//folly/lang:assume",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "coroutine_test",
    srcs = ["CoroutineTest.cpp"],
    deps = [
        "folly//folly/experimental/coro:coroutine",
        "folly//folly/lang:keep",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "gmock_helpers_test",
    srcs = [
        "GmockHelpersTest.cpp",
    ],
    deps = [
        "folly//folly:portability",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:gmock_helpers",
        "folly//folly/experimental/coro:gtest_helpers",
        "folly//folly/experimental/coro:task",
        "folly//folly/portability:gmock",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "gtest_helpers_test",
    srcs = [
        "GtestHelpersTest.cpp",
    ],
    supports_static_listing = False,
    deps = [
        "folly//folly/experimental/coro:gtest_helpers",
        "folly//folly/portability:gtest",
    ],
)

cpp_benchmark(
    name = "async_generator_bench",
    srcs = ["AsyncGeneratorBenchmark.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly:exception_wrapper",
        "folly//folly:portability",
        "folly//folly/experimental/coro:async_generator",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:generator",
        "folly//folly/experimental/coro:task",
        "folly//folly/experimental/coro:via_if_async",
    ],
)

cpp_benchmark(
    name = "blocking_wait_bench",
    srcs = ["BlockingWaitBenchmark.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly:portability",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:coroutine",
    ],
)

cpp_benchmark(
    name = "task_bench",
    srcs = ["TaskBenchmark.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly:portability",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:current_executor",
        "folly//folly/experimental/coro:task",
    ],
)

cpp_benchmark(
    name = "coro_benchmark_allocator",
    srcs = ["CoroBenchmarkAllocator.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly/experimental/coro:coroutine",
    ],
)

cpp_benchmark(
    name = "coro_benchmark_nrvo",
    srcs = ["CoroBenchmarkNRVO.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly/experimental/coro:coroutine",
    ],
)

cpp_unittest(
    name = "generator_test",
    srcs = ["GeneratorTest.cpp"],
    headers = [],
    deps = [
        "folly//folly:portability",
        "folly//folly:scope_guard",
        "folly//folly/experimental/coro:generator",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "retry_test",
    srcs = ["RetryTest.cpp"],
    headers = [],
    deps = [
        "folly//folly:portability",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:retry",
        "folly//folly/experimental/coro:sleep",
        "folly//folly/experimental/coro:task",
        "folly//folly/portability:gtest",
    ],
)

cpp_benchmark(
    name = "collect_all_benchmark",
    srcs = ["CollectAllBenchmark.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly/executors:cpu_thread_pool_executor",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:collect",
        "folly//folly/experimental/coro:generator",
        "folly//folly/experimental/coro:task",
        "folly//folly/synchronization:baton",
    ],
)

cpp_unittest(
    name = "RustAdaptorsTest",
    srcs = [
        "RustAdaptorsTest.cpp",
    ],
    deps = [
        "folly//folly:cancellation_token",
        "folly//folly:portability",
        "folly//folly/experimental/coro:baton",
        "folly//folly/experimental/coro:rust_adaptors",
        "folly//folly/experimental/coro:sleep",
        "folly//folly/portability:gtest",
        "folly//folly/synchronization:baton",
    ],
)

cpp_unittest(
    name = "PromiseTest",
    srcs = [
        "PromiseTest.cpp",
    ],
    deps = [
        "folly//folly:portability",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:collect",
        "folly//folly/experimental/coro:gtest_helpers",
        "folly//folly/experimental/coro:promise",
        "folly//folly/experimental/coro:task",
        "folly//folly/experimental/coro:with_cancellation",
        "folly//folly/portability:gtest",
    ],
)

cpp_benchmark(
    name = "promise_benchmark",
    srcs = ["PromiseBenchmark.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly:portability",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:collect",
        "folly//folly/experimental/coro:future_util",
        "folly//folly/experimental/coro:promise",
        "folly//folly/experimental/coro:task",
        "folly//folly/futures:core",
    ],
)

cpp_unittest(
    name = "request_context_test",
    srcs = ["RequestContextTest.cpp"],
    deps = [
        "folly//folly/executors:manual_executor",
        "folly//folly/experimental/coro:async_generator",
        "folly//folly/experimental/coro:async_scope",
        "folly//folly/experimental/coro:baton",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:mutex",
        "folly//folly/experimental/coro:task",
        "folly//folly/experimental/coro:unbounded_queue",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "shared_promise_test",
    srcs = [
        "SharedPromiseTest.cpp",
    ],
    deps = [
        "folly//folly/executors:cpu_thread_pool_executor",
        "folly//folly/experimental/coro:blocking_wait",
        "folly//folly/experimental/coro:detach_on_cancel",
        "folly//folly/experimental/coro:shared_promise",
        "folly//folly/portability:gtest",
    ],
)
