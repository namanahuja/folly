load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")

oncall("fbcode_entropy_wardens_folly")

cpp_library(
    name = "async_base_fwd",
    headers = [
        "HHWheelTimer-fwd.h",
    ],
)

cpp_library(
    name = "async_base",
    srcs = [
        "AsyncTimeout.cpp",
        "EventBase.cpp",
        "EventBaseBackendBase.cpp",
        "EventBaseLocal.cpp",
        "EventHandler.cpp",
        "HHWheelTimer.cpp",
        "TimeoutManager.cpp",
        "VirtualEventBase.cpp",
    ],
    headers = [
        "AsyncTimeout.h",
        "AtomicNotificationQueue.h",
        "AtomicNotificationQueue-inl.h",
        "EventBase.h",
        "EventBaseAtomicNotificationQueue.h",
        "EventBaseAtomicNotificationQueue-inl.h",
        "EventBaseBackendBase.h",
        "EventBaseLocal.h",
        "EventHandler.h",
        "HHWheelTimer.h",
        "NotificationQueue.h",
        "TimeoutManager.h",
        "VirtualEventBase.h",
    ],
    deps = [
        "folly//folly:chrono",
        "folly//folly:map_util",
        "folly//folly:string",
        "folly//folly/container:bit_iterator",
        "folly//folly/experimental:event_count",
        "folly//folly/lang:assume",
        "folly//folly/lang:bits",
        "folly//folly/system:thread_id",
        "folly//folly/system:thread_name",
    ],
    exported_deps = [
        ":async_base_fwd",
        ":delayed_destruction",
        ":event_util",
        ":request_context",
        "folly//folly:exception",
        "folly//folly:exception_string",
        "folly//folly:executor",
        "folly//folly:file_util",
        "folly//folly:function",
        "folly//folly:likely",
        "folly//folly:memory",
        "folly//folly:optional",
        "folly//folly:portability",
        "folly//folly:scope_guard",
        "folly//folly:spin_lock",
        "folly//folly:synchronized",
        "folly//folly/container:f14_hash",
        "folly//folly/executors:drivable_executor",
        "folly//folly/executors:io_executor",
        "folly//folly/executors:queue_observer",
        "folly//folly/executors:scheduled_executor",
        "folly//folly/executors:sequenced_executor",
        "folly//folly/experimental:execution_observer",
        "folly//folly/io:iobuf",
        "folly//folly/lang:align",
        "folly//folly/lang:thunk",
        "folly//folly/net:net_ops",
        "folly//folly/net:network_socket",
        "folly//folly/portability:config",
        "folly//folly/portability:event",
        "folly//folly/portability:fcntl",
        "folly//folly/portability:iovec",
        "folly//folly/portability:sockets",
        "folly//folly/portability:unistd",
        "folly//folly/synchronization:baton",
        "folly//folly/synchronization:call_once",
        "folly//folly/system:pid",
    ],
    exported_external_deps = [
        "boost",
        "glog",
    ],
)

cpp_library(
    name = "async_pipe",
    srcs = ["AsyncPipe.cpp"],
    headers = ["AsyncPipe.h"],
    deps = [
        ":async_socket_exception",
        "folly//folly:file_util",
        "folly//folly:utility",
        "folly//folly/detail:file_util_detail",
    ],
    exported_deps = [
        ":async_base",
        ":async_transport",
        ":delayed_destruction",
        "folly//folly/io:iobuf",
    ],
)

cpp_library(
    name = "async_signal_handler",
    srcs = ["AsyncSignalHandler.cpp"],
    headers = ["AsyncSignalHandler.h"],
    deps = [
        "folly//folly:conv",
    ],
    exported_deps = [
        ":async_base",
        "folly//folly/portability:event",
    ],
)

cpp_library(
    name = "async_socket_transport",
    srcs = ["AsyncSocketTransport.cpp"],
    headers = ["AsyncSocketTransport.h"],
    deps = [
    ],
    exported_deps = [
        ":async_socket_exception",
        ":async_transport",
        "folly//folly:network_address",
        "folly//folly/io:iobuf",
        "folly//folly/io:socket_option_map",
        "folly//folly/net:network_socket",
    ],
)

cpp_library(
    name = "async_socket",
    srcs = ["AsyncSocket.cpp"],
    headers = ["AsyncSocket.h"],
    deps = [
        "folly//folly:exception",
        "folly//folly:format",
        "folly//folly:portability",
        "folly//folly:string",
        "folly//folly/lang:checked_math",
        "folly//folly/portability:fcntl",
        "folly//folly/portability:sys_mman",
        "folly//folly/portability:sys_uio",
        "folly//folly/portability:unistd",
    ],
    exported_deps = [
        ":async_base",
        ":async_socket_exception",
        ":async_socket_transport",
        ":async_transport",
        ":delayed_destruction",
        "folly//folly:constructor_callback_list",
        "folly//folly:network_address",
        "folly//folly:optional",
        "folly//folly:small_vector",
        "folly//folly/detail:socket_fast_open",
        "folly//folly/io:iobuf",
        "folly//folly/io:shutdown_socket_set",
        "folly//folly/io:socket_option_map",
        "folly//folly/io/async/observer:async_socket_observer_container",
        "folly//folly/net:net_ops_dispatcher",
        "folly//folly/net:tcpinfo",
        "folly//folly/net:tcpinfo_dispatcher",
        "folly//folly/portability:sockets",
    ],
    external_deps = [
        ("boost", None, "boost_preprocessor"),
    ],
)

cpp_library(
    name = "async_socket_base",
    headers = ["AsyncSocketBase.h"],
    exported_deps = [
        ":async_base",
        "folly//folly:network_address",
    ],
)

cpp_library(
    name = "async_socket_exception",
    srcs = ["AsyncSocketException.cpp"],
    headers = ["AsyncSocketException.h"],
    deps = [
        "folly//folly:format",
        "folly//folly:string",
    ],
    exported_deps = [
        "folly//folly:c_portability",
        "folly//folly:range",
    ],
)

cpp_library(
    name = "async_ssl_socket",
    srcs = ["AsyncSSLSocket.cpp"],
    headers = ["AsyncSSLSocket.h"],
    deps = [
        "folly//folly:format",
        "folly//folly:indestructible",
        "folly//folly:network_address",
        "folly//folly:spin_lock",
        "folly//folly/io/async/ssl:basic_transport_certificate",
    ],
    exported_deps = [
        ":async_base",
        ":async_pipe",
        ":async_socket",
        ":certificate_identity_verifier",
        ":ssl_context",
        "folly//folly:optional",
        "folly//folly:string",
        "folly//folly/io:iobuf",
        "folly//folly/io:socket_option_map",
        "folly//folly/io/async/ssl:openssl_utils",
        "folly//folly/io/async/ssl:ssl_errors",
        "folly//folly/io/async/ssl:tls_definitions",
        "folly//folly/lang:bits",
        "folly//folly/portability:openssl",
        "folly//folly/portability:sockets",
        "folly//folly/ssl:openssl_ptr_types",
        "folly//folly/ssl:ssl_session",
        "folly//folly/ssl:ssl_session_manager",
    ],
)

cpp_library(
    name = "async_transport",
    headers = ["AsyncTransport.h"],
    exported_deps = [
        ":async_base",
        ":async_socket_base",
        ":async_transport_certificate",
        ":delayed_destruction",
        ":write_flags",
        "folly//folly:optional",
        "folly//folly/io:iobuf",
        "folly//folly/portability:openssl",
        "folly//folly/portability:sys_uio",
        "folly//folly/ssl:openssl_ptr_types",
    ],
)

cpp_library(
    name = "async_transport_certificate",
    headers = ["AsyncTransportCertificate.h"],
    exported_deps = [],
)

cpp_library(
    name = "certificate_identity_verifier",
    headers = ["CertificateIdentityVerifier.h"],
    exported_deps = [
        ":async_transport_certificate",
        "folly//folly:try",
        "folly//folly:unit",
    ],
)

cpp_library(
    name = "async_udp_server_socket",
    headers = ["AsyncUDPServerSocket.h"],
    exported_deps = [
        ":async_base",
        ":async_udp_socket",
        "folly//folly:memory",
        "folly//folly/io:iobuf",
    ],
)

cpp_library(
    name = "async_udp_socket",
    srcs = ["AsyncUDPSocket.cpp"],
    headers = ["AsyncUDPSocket.h"],
    deps = [
        "folly//folly:likely",
        "folly//folly:small_vector",
        "folly//folly:utility",
        "folly//folly/portability:fcntl",
        "folly//folly/portability:sockets",
        "folly//folly/portability:unistd",
    ],
    exported_deps = [
        ":async_base",
        ":async_socket_base",
        ":async_socket_exception",
        "folly//folly:function",
        "folly//folly:network_address",
        "folly//folly:scope_guard",
        "folly//folly/io:iobuf",
        "folly//folly/io:socket_option_map",
        "folly//folly/net:net_ops",
        "folly//folly/net:net_ops_dispatcher",
        "folly//folly/net:network_socket",
    ],
    external_deps = [
        ("boost", None, "boost_preprocessor"),
    ],
)

cpp_library(
    name = "decorated_async_transport_wrapper",
    headers = [
        "DecoratedAsyncTransportWrapper.h",
        "WriteChainAsyncTransportWrapper.h",
    ],
    exported_deps = [
        ":async_transport",
        "folly//folly/io:iobuf",
    ],
)

cpp_library(
    name = "delayed_destruction",
    srcs = [
        "DelayedDestruction.cpp",
    ],
    headers = [
        "DelayedDestruction.h",
        "DelayedDestructionBase.h",
    ],
    exported_deps = [
        "folly//folly:portability",
    ],
)

cpp_library(
    name = "destructor_check",
    headers = ["DestructorCheck.h"],
)

cpp_library(
    name = "event_base_manager",
    srcs = ["EventBaseManager.cpp"],
    headers = ["EventBaseManager.h"],
    exported_deps = [
        ":async_base",
        "folly//folly:optional",
        "folly//folly:thread_local",
    ],
)

cpp_library(
    name = "event_base_thread",
    srcs = ["EventBaseThread.cpp"],
    headers = ["EventBaseThread.h"],
    deps = [
        ":scoped_event_base_thread",
        "folly//folly:memory",
    ],
    exported_deps = [
        ":async_base",
        "folly//folly:range",
    ],
)

cpp_library(
    name = "event_util",
    headers = ["EventUtil.h"],
    exported_deps = [
        "folly//folly/portability:event",
    ],
)

cpp_library(
    name = "request_context",
    srcs = ["Request.cpp"],
    headers = ["Request.h"],
    deps = [
        "folly//folly:glog",
        "folly//folly/experimental:single_writer_fixed_hash_map",
        "folly//folly/tracing:static_tracepoint",
    ],
    exported_deps = [
        "folly//folly:shared_mutex",
        "folly//folly:singleton_thread_local",
        "folly//folly:synchronized",
        "folly//folly/concurrency:process_local_unique_id",
        "folly//folly/container:f14_hash",
        "folly//folly/detail:iterators",
        "folly//folly/synchronization:hazptr",
    ],
)

cpp_library(
    name = "scoped_event_base_thread",
    srcs = ["ScopedEventBaseThread.cpp"],
    headers = ["ScopedEventBaseThread.h"],
    deps = [
        ":event_base_manager",
        "folly//folly:function",
        "folly//folly:range",
        "folly//folly/system:thread_name",
    ],
    exported_deps = [
        ":async_base",
        "folly//folly/synchronization:baton",
    ],
)

cpp_library(
    name = "terminate_cancellation_token",
    srcs = ["TerminateCancellationToken.cpp"],
    headers = ["TerminateCancellationToken.h"],
    deps = [
        ":async_signal_handler",
        ":scoped_event_base_thread",
        "folly//folly:singleton",
    ],
    exported_deps = [
        "folly//folly:cancellation_token",
    ],
)

cpp_library(
    name = "server_socket",
    srcs = ["AsyncServerSocket.cpp"],
    headers = ["AsyncServerSocket.h"],
    deps = [
        "folly//folly:file_util",
        "folly//folly:glog",
        "folly//folly:portability",
        "folly//folly/detail:socket_fast_open",
        "folly//folly/portability:fcntl",
        "folly//folly/portability:unistd",
    ],
    exported_deps = [
        ":async_base",
        ":async_socket_base",
        ":delayed_destruction",
        "folly//folly:exception_wrapper",
        "folly//folly:network_address",
        "folly//folly:string",
        "folly//folly/io:shutdown_socket_set",
        "folly//folly/net:net_ops",
        "folly//folly/net:network_socket",
        "folly//folly/observer:observer",
        "folly//folly/portability:sockets",
    ],
)

cpp_library(
    name = "ssl_context",
    srcs = ["SSLContext.cpp"],
    headers = ["SSLContext.h"],
    deps = [
        "folly//folly:format",
        "folly//folly:memory",
        "folly//folly:random",
        "folly//folly:shared_mutex",
        "folly//folly:spin_lock",
        "folly//folly/ssl:openssl_ticket_handler",
        "folly//folly/ssl:password_collector",
        "folly//folly/ssl:ssl_session_manager",
        "folly//folly/system:thread_id",
    ],
    exported_deps = [
        "folly//folly:function",
        "folly//folly:portability",
        "folly//folly:range",
        "folly//folly:string",
        "folly//folly/container:access",
        "folly//folly/io/async/ssl:openssl_utils",
        "folly//folly/portability:openssl",
        "folly//folly/ssl:openssl_ptr_types",
    ],
    exported_external_deps = [
        "glog",
    ],
)

cpp_library(
    name = "ssl_options",
    srcs = ["SSLOptions.cpp"],
    headers = ["SSLOptions.h"],
    deps = [
        "folly//folly:format",
    ],
    exported_deps = [
        ":ssl_context",
        "folly//folly/container:array",
    ],
    external_deps = [
        "glog",
    ],
)

cpp_library(
    name = "password_in_file",
    srcs = ["PasswordInFile.cpp"],
    headers = ["PasswordInFile.h"],
    deps = [
        "folly//folly:file_util",
        "folly//folly/portability:openssl",
    ],
    exported_deps = [
        "folly//folly/ssl:password_collector",
    ],
)

cpp_library(
    name = "write_flags",
    headers = ["WriteFlags.h"],
)
