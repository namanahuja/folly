load("@fbcode_macros//build_defs:cpp_benchmark.bzl", "cpp_benchmark")
load("@fbcode_macros//build_defs:cpp_binary.bzl", "cpp_binary")
load("@fbcode_macros//build_defs:cpp_unittest.bzl", "cpp_unittest")

oncall("fbcode_entropy_wardens_folly")

cpp_unittest(
    name = "aligned_test",
    srcs = ["AlignedTest.cpp"],
    deps = [
        "folly//folly/lang:align",
        "folly//folly/lang:aligned",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "badge_test",
    srcs = ["BadgeTest.cpp"],
    deps = [
        "folly//folly/lang:badge",
        "folly//folly/portability:gtest",
    ],
)

cpp_binary(
    name = "bits_benchmark",
    srcs = ["BitsBenchmark.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly:cpp_attributes",
        "folly//folly:random",
        "folly//folly/lang:assume",
        "folly//folly/lang:bits",
    ],
)

cpp_unittest(
    name = "bits_test",
    srcs = ["BitsTest.cpp"],
    headers = [],
    deps = [
        "folly//folly:random",
        "folly//folly/lang:bits",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "c_string_test",
    srcs = ["CStringTest.cpp"],
    deps = [
        "folly//folly/lang:c_string",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "cast_test",
    srcs = ["CastTest.cpp"],
    deps = [
        "folly//folly:utility",
        "folly//folly/lang:cast",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "checked_math_test",
    srcs = ["CheckedMathTest.cpp"],
    deps = [
        "folly//folly/lang:checked_math",
        "folly//folly/lang:keep",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "exception_test",
    srcs = ["ExceptionTest.cpp"],
    deps = [
        "folly//folly:portability",
        "folly//folly/lang:exception",
        "folly//folly/lang:keep",
        "folly//folly/lang:pretty",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "extern_test",
    srcs = ["ExternTest.cpp"],
    deps = [
        "folly//folly/lang:extern",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "hint_test",
    srcs = ["HintTest.cpp"],
    deps = [
        "folly//folly/lang:hint",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "new_test",
    srcs = ["NewTest.cpp"],
    deps = [
        "folly//folly/lang:align",
        "folly//folly/lang:new",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "ordering_test",
    srcs = ["OrderingTest.cpp"],
    deps = [
        "folly//folly/lang:ordering",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "propagate_const_test",
    srcs = ["PropagateConstTest.cpp"],
    deps = [
        "folly//folly/lang:propagate_const",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "rvalue_reference_wrapper_test",
    srcs = ["RValueReferenceWrapperTest.cpp"],
    headers = [],
    deps = [
        "folly//folly/lang:rvalue_reference_wrapper",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "safe_assert_test",
    srcs = ["SafeAssertTest.cpp"],
    headers = [],
    deps = [
        "folly//folly:benchmark",
        "folly//folly:conv",
        "folly//folly/lang:keep",
        "folly//folly/lang:safe_assert",
        "folly//folly/portability:gtest",
    ],
    external_deps = [
        "glog",
    ],
)

cpp_unittest(
    name = "thunk_test",
    srcs = ["ThunkTest.cpp"],
    deps = [
        "folly//folly:traits",
        "folly//folly/lang:thunk",
        "folly//folly/portability:gtest",
    ],
)

cpp_benchmark(
    name = "to_ascii_bench",
    srcs = ["ToAsciiBench.cpp"],
    deps = [
        "fbsource//third-party/fmt:fmt",
        "folly//folly:benchmark",
        "folly//folly/lang:keep",
        "folly//folly/lang:to_ascii",
        "folly//folly/portability:fmt_compile",
    ],
)

cpp_unittest(
    name = "to_ascii_test",
    srcs = ["ToAsciiTest.cpp"],
    deps = [
        "folly//folly/lang:to_ascii",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "type_info_test",
    srcs = ["TypeInfoTest.cpp"],
    deps = [
        "folly//folly/lang:type_info",
        "folly//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "pretty_test",
    srcs = ["PrettyTest.cpp"],
    deps = [
        "folly//folly/lang:pretty",
        "folly//folly/portability:gtest",
    ],
)

cpp_benchmark(
    name = "uncaught_exceptions_bench",
    srcs = ["UncaughtExceptionsBench.cpp"],
    deps = [
        "folly//folly:benchmark",
        "folly//folly/lang:hint",
        "folly//folly/lang:keep",
        "folly//folly/lang:uncaught_exceptions",
    ],
)

cpp_unittest(
    name = "uncaught_exceptions_test",
    srcs = ["UncaughtExceptionsTest.cpp"],
    headers = [],
    supports_static_listing = False,
    deps = [
        "folly//folly:conv",
        "folly//folly/functional:invoke",
        "folly//folly/lang:uncaught_exceptions",
        "folly//folly/portability:gtest",
    ],
)
