load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")

oncall("fbcode_entropy_wardens_folly")

cpp_library(
    name = "openssl_ptr_types",
    headers = ["OpenSSLPtrTypes.h"],
    exported_deps = [
        "folly//folly:memory",
        "folly//folly/portability:openssl",
    ],
    exported_external_deps = [
        "glog",
    ],
)

cpp_library(
    name = "openssl_hash",
    srcs = ["OpenSSLHash.cpp"],
    headers = ["OpenSSLHash.h"],
    deps = [
        "folly//folly:format",
    ],
    exported_deps = [
        ":openssl_ptr_types",
        "folly//folly:exception",
        "folly//folly:range",
        "folly//folly/io:iobuf",
        "folly//folly/portability:openssl",
    ],
)

cpp_library(
    name = "openssl_cert_utils",
    srcs = ["OpenSSLCertUtils.cpp"],
    headers = ["OpenSSLCertUtils.h"],
    deps = [
        "folly//folly:file_util",
        "folly//folly:scope_guard",
        "folly//folly:string",
    ],
    exported_deps = [
        ":openssl_ptr_types",
        "folly//folly:optional",
        "folly//folly/io:iobuf",
        "folly//folly/portability:openssl",
    ],
)

cpp_library(
    name = "openssl_version_finder",
    headers = ["OpenSSLVersionFinder.h"],
    exported_deps = [
        "folly//folly/portability:openssl",
    ],
)

cpp_library(
    name = "openssl_ticket_handler",
    headers = ["OpenSSLTicketHandler.h"],
    exported_deps = [
        "folly//folly/portability:openssl",
    ],
)

cpp_library(
    name = "ssl_session",
    headers = ["SSLSession.h"],
    exported_deps = [
    ],
)

cpp_library(
    name = "ssl_session_manager",
    srcs = ["SSLSessionManager.cpp"],
    headers = ["SSLSessionManager.h"],
    deps = [
        "folly//folly:overload",
        "folly//folly/ssl/detail:openssl_session",
    ],
    exported_deps = [
        ":openssl_ptr_types",
        ":ssl_session",
        "folly//folly/portability:openssl",
    ],
)

cpp_library(
    name = "password_collector",
    srcs = ["PasswordCollector.cpp"],
    headers = ["PasswordCollector.h"],
)

cpp_library(
    name = "openssl_key_utils",
    srcs = ["OpenSSLKeyUtils.cpp"],
    headers = ["OpenSSLKeyUtils.h"],
    deps = [
        ":password_collector",
        "folly//folly/portability:openssl",
    ],
    exported_deps = [
        ":openssl_ptr_types",
        "folly//folly:range",
    ],
)
